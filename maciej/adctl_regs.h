/*
  Register definitions for slave core: LT2175 ADC controller

  * File           : software/adctl_regs.h
  * Author         : auto-generated by wbgen2 from adc_controller.wb
  * Created        : Tue Jul 13 16:59:02 2010
  * Standard       : ANSI C

    THIS FILE WAS GENERATED BY wbgen2 FROM SOURCE FILE adc_controller.wb
    DO NOT HAND-EDIT UNLESS IT'S ABSOLUTELY NECESSARY!

*/

#ifndef __WBGEN2_REGDEFS_ADC_CONTROLLER_WB
#define __WBGEN2_REGDEFS_ADC_CONTROLLER_WB

#include <inttypes.h>

#if defined( __GNUC__)
#define PACKED __attribute__ ((packed))
#else
#error "Unsupported compiler?"
#endif

#ifndef __WBGEN2_MACROS_DEFINED__
#define __WBGEN2_MACROS_DEFINED__
#define WBGEN2_GEN_MASK(offset, size) (((1<<(size))-1) << (offset))
#define WBGEN2_GEN_WRITE(value, offset, size) (((value) & ((1<<(size))-1)) << (offset))
#define WBGEN2_GEN_READ(reg, offset, size) (((reg) >> (offset)) & ((1<<(size))-1))
#define WBGEN2_SIGN_EXTEND(value, bits) (((value) & (1<<bits) ? ~((1<<(bits))-1): 0 ) | (value))
#endif


/* definitions for register: ADC Control Register */

/* definitions for field: Trigger source in reg: ADC Control Register */
#define ADCTL_CTL_TRIG_SEL                    WBGEN2_GEN_MASK(0, 1)

/* definitions for field: Trigger clear in reg: ADC Control Register */
#define ADCTL_CTL_TRIG_CLR                    WBGEN2_GEN_MASK(1, 1)

/* definitions for field: SERDES reset in reg: ADC Control Register */
#define ADCTL_CTL_SERDES_RST                  WBGEN2_GEN_MASK(2, 1)

/* definitions for field: LSide bitslip in reg: ADC Control Register */
#define ADCTL_CTL_BSLIP_L                     WBGEN2_GEN_MASK(3, 1)

/* definitions for field: RSide bitslip in reg: ADC Control Register */
#define ADCTL_CTL_BSLIP_R                     WBGEN2_GEN_MASK(4, 1)

/* definitions for field: Post-Trigger samples in reg: ADC Control Register */
#define ADCTL_CTL_SAMPLES_MASK                WBGEN2_GEN_MASK(16, 14)
#define ADCTL_CTL_SAMPLES_SHIFT               16
#define ADCTL_CTL_SAMPLES_W(value)            WBGEN2_GEN_WRITE(value, 16, 14)
#define ADCTL_CTL_SAMPLES_R(reg)              WBGEN2_GEN_READ(reg, 16, 14)

/* definitions for register: IODELAY Control */

/* definitions for field: Busy in reg: IODELAY Control */
#define ADCTL_IODELAY_BUSY                    WBGEN2_GEN_MASK(0, 1)

/* definitions for field: Clock in reg: IODELAY Control */
#define ADCTL_IODELAY_CLK                     WBGEN2_GEN_MASK(1, 1)

/* definitions for field: Chip enable in reg: IODELAY Control */
#define ADCTL_IODELAY_CE                      WBGEN2_GEN_MASK(2, 1)

/* definitions for field: Data in reg: IODELAY Control */
#define ADCTL_IODELAY_DATA                    WBGEN2_GEN_MASK(3, 1)

/* definitions for field: Cal in reg: IODELAY Control */
#define ADCTL_IODELAY_CAL                     WBGEN2_GEN_MASK(4, 1)

/* definitions for register: ADC Status Register */

/* definitions for field: Trigger position in reg: ADC Status Register */
#define ADCTL_STA_TRIG_POS_MASK               WBGEN2_GEN_MASK(0, 14)
#define ADCTL_STA_TRIG_POS_SHIFT              0
#define ADCTL_STA_TRIG_POS_W(value)           WBGEN2_GEN_WRITE(value, 0, 14)
#define ADCTL_STA_TRIG_POS_R(reg)             WBGEN2_GEN_READ(reg, 0, 14)

/* definitions for field: Acquisition done in reg: ADC Status Register */
#define ADCTL_STA_DONE                        WBGEN2_GEN_MASK(14, 1)

/* definitions for field: Serdes synced in reg: ADC Status Register */
#define ADCTL_STA_SERDES_SYNC                 WBGEN2_GEN_MASK(15, 1)

/* definitions for register: Trigger register */
/* [0x0]: REG ADC Control Register */
#define ADCTL_REG_CTL 0x00000000
/* [0x4]: REG IODELAY Control */
#define ADCTL_REG_IODELAY 0x00000001
/* [0x8]: REG ADC Status Register */
#define ADCTL_REG_STA 0x00000002
/* [0xc]: REG Trigger register */
#define ADCTL_REG_SWTRIG 0x00000003
#endif
